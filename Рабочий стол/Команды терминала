Установка deb пакетов sudo dpkg -i /home/user/soft/ntlmaps_0.9.9.0.1-10_all.deb
cd команда для смены текущей позиции каталога (осле команды cd можно указывать как полные пути относительно корня, так и относительные, отсчитывающиеся от текущего каталога, исполь-
зовать различные небуквенные символы и пробелы напрямую при наборе путей нельзя.
Например, для того, чтобы перейти в каталог, содержащий в имени символ пробела, надо
при наборе пути к такому каталогу перед пробелом поставить символ обратного слеша \.)

pinta - аналог paint

////////////////////////////////////////////////////////////////////////////////
//////////////////////////////Простейшие//команды///////////////////////////////
////////////////////////////////////////////////////////////////////////////////

	ls [путь_к_каталогу]  = выводит список файлов и каталогов в данной директории
		
	Параметры :
		    -R = Просмотр содержимоrо подкаталоrов
		    -1 = Вывод содержимоrо каталоrа в один столбец
		    -m = Вывод содержимоrо Kanfkjuf с запятыми в качестве разделителей
		    -a = Отображение скрытых файлов и KaTaпOrOB
		    -F = Отображение информации о типах файлов
		    -l = Информации о правах доступа и владельцах файлов
		    -r = ВЫВОД информации В обратном порядке
		    -x = сортировка содержимого каталога по суффиксам имен файлов
		    -t = сортировка по дате и времени
		    -s = сортировка содержимого по размеру файлов
		    -h = предоставление размеров файлов в килобайтах, мегабайтах или гигабайтах
		    
	
	
	pwd = определение пути к текущему каталогу


	cd [путь_к_каталогу] = переход к другому каталогу
	
	Параметры :
		    -(~) = переход в рабочий каталог (cd ~)
		    -(-) = переход к предыдущему каталогу


	touch [имя_файла_для_изменения_времени] = изменение сведений о времени

	Параметры :
		    -a = изменение времени доступа
		    -m = изменение времени модификации
		    -t [[CC]YY]MMDDhhmm[.ss]= установка произвольного времение для файла (touch -t 197002160701 name.log)


	mkdir [имя_нового_какталога] = создание нового каталога

	Параметры :
		    -p = создание нового каталога и небходимых подкаталогов (mkdir -p pictires/personal/family)
		    -v = информация о действиях выполняемых командой mkdir


	cp [имя_файла_для_копирования имя_нового_файла] = копирование файлов

	Параметры : 
		    -v = вывод подробной информации о копировании файла
			-i = предотвращение копирования файлов поверх существующих
			-R = копирование каталогов
			-a = создание резервных копий


	rm [имя_файла_для_удаления] = удаление файлов

	Параметры :
			-v = вывод подробной информации при удалении файлов
			-i = предотвращение удаления важных файлов
			-Rf = удаление файлов и каталогов содержащих данные


	mv [путь_и_имя_файла_копирования путь_куда_копируем_и_имя_файла]= перемещение и переимеинование файлов

	
	rmdir [имя_пустого_каталога] = удаление пустого каталога


	su [имя_пользователя] = позволяет выполнять действия от имени другого пользователя

	Параметры :
			-l = использование не только имени другого пользователя, но и его переменное окружение


	whoami = сообщает имя пользователя с точки зрения оболочки


	man [название_команды] = получение информации о команде 

	Параметры : 
			-k = поиск команды по выполняемым ею действиям
			-f = получение кратких сведений о команде
			-u = формирование базы данных команд
			-e = вывести справочную информацию на печать

	
	info [название_команды] = получение информации о команде, организованная в виде разделов


	whereis [название_команды_или_файла] = определяет путь к исполняемым, исходным файлам и страницам справочного руководства

	Параметры :
			-b = путь только к исполняемым файлам
			-m = путь лишь к страницам справочного руководства
			-s = путь к исходным файлам

	whatis [название_команды] = выводит сведения о команде (аналог man -f)

	Параметры :
			-w = поиск с применением групповых операций
			-r = для работы с регуляторными выражениями

	apropos [название_команды] = поиск информации о команде по выполняемым ею действиям (аналог man -k)

	Параметры :
			-w = поиск с применением групповых операций
			-r = для работы с регуляторными выражениями
			-e = для точного совпадения слова или фразы при поиске 


	which [название_файла] = показывает местоположение файла который будет запущен командой из строки



//////////////////////////////////////////////////////////////////////////////
/////////////////////////////Объединение//команд//////////////////////////////
//////////////////////////////////////////////////////////////////////////////

	Чтобы выполнить последовательно несколько команд, необходимо использовать символ (;)
Команда_1 ; Команда_2 ; Команда_3 ...
При этом вначале выполняется Команда_1, затем последующие.

	Чтобы выполнить последовательно несколько команд с проверкой на их корректность(смогут ли они выполниться), необходимо разделять команды символом (&&)
Команда_1 && Команда_2 && Команда_3 ...
При этом команды также выполняются последовательно, но управление следующей команде переходит только в случае, если предыдущая завершилась без ошибки.

	Чтобы выполнить последовательно несколько команд с проверкой на их корректность(смогут ли они выполниться), необходимо разделять команды символом (&&)
Команда_1 && Команда_2 && Команда_3 ...
При этом команды также выполняются последовательно, но управление следующей команде переходит только в случае, если предыдущая завершилась без ошибки.

	Чтобы выполнить команду при условии, что предыдущая завершилась ишибкой, используется символ (||) 
Команда_1 || Команда_2
При этом Команда_2 выполнится только при условии, что не выпонилась Команда_1

	Использование выходных данных одной команды при вызове другой команды осуществляется с помощью символов ($())
Команда_1 $(Команда_2)
Пример : mkdir $(date "+%Y-%m-%d")

	

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////Потоки//ввода-вывода/////////////////////////////
///////////////////////////////////////////////////////////////////////////////

    _________________________________________________________________
   |Идентификатор|   Название        |Сокращение    |  Использование |
   |             |                   |по умолчанию  |                |
   |_____________|___________________|______________|________________|
   |0            |  Стандартный      |  stdin       |  клавиатура    |
   |             |  входной поток    |              |                |
   |_____________|___________________|______________|________________|
   |1            |  Стандартный      |  stdout      |  терминал      |      
   |             |  выходной поток   |              |                | 
   |_____________|___________________|______________|________________|          
   |2            |  Стандартный      |              |                |    
   |             |  поток ошибок     |  stderr      |  терминал      |  
   |_____________|___________________|______________|________________|    


	Для передачи выходных данных одной команды на вход другой команды используется символ (|)
Команда_1 | Команда_2
При этом Команда_1 будет выступать в качестве источника данных, которые передаются на вход Команда_2.
Пример : ls -1 | less


	Для перенаправления выходных данных в файл используется символ (>)
Команда_1 > имя_файла
При этом выходные данные команды Команда_1 будут записаны в файл имя_файла
Пример : ls -1F > datafiles.txt

	
	Чтобы предотвратить перезапись файла при перенаправлении вывода, нужно использовать команду noclobber
Она вызывается так : set -o noclobber
После её вызова, перенаправление в существующий файл будет производиться только с нашего разрешения.
Чтобы выключить функцию : set +o noclobber

	Чтобы перенаправить выходные данные и записать их в конец файла используются символы (>>)
Команда_1 >> имя_файла 
При этом выходные данные будут записаны в конец файла, если файла не существует, он будет создан. В отличие от (>) файл не будет каждый раз перезаписываться, а пополняться.


	Чтобы использовать содержимое файла в качестве входных данных используется символ (<)
Команда_1 < имя_файла
При этом содержимое файла будет выступать в качестве входных данных для команды Команда_1


///////////////////////////////////////////////////////////////////////////////
//////////////////////Отображение//содержимого//файлов/////////////////////////
///////////////////////////////////////////////////////////////////////////////

	cat [имя_файла] = выводит содержимое файла в консоль, а затем возвращает управление оболочке
	cat [имя_файла1 имя_файла2 имя_файла3 ...] = выводит содержимое сразу нескольких фалов без разделителей.
	cat [имя_файла1 имя_файла2 > имя_файла3] = объединяет 1 и 2 файл и сохраняет их в файл имя_файла3
	Параметы :
			-n = выводит содержимое файлов с нумерацией строк
	

	less [имя_файла] = организует постраничный вывод текста 
Имеет множество параметров и комбинаций для внутреннего управления, которые я в данном руководстве рассматривать не буду. Используйте man или info


	head [имя_файла] = просмотр первых десяти строк файла 
	head [имя_файла1 имя_файла2] = просмотр первых десяти строк файла1 и файла2

	Параметры :
			-n [число_строк] = позволяет отображать указанное количество строк файла
			-с [число_байтов] = позволяет отобразить указанное количество байтов файла
 

	tail [имя_файла] = просмотр последних десяти строк файла
Поддерживает все функции head.

	Параметры :
			-f = не завершает функцию и постоянно отображает последние строки файла, позволяя видить последние изменения.



//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////Вывод//на//печать///////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////


	lpstat -p = получение списка доступных принтеров
	lpstat -d = определение принтера установленного по умолчанию
	lpstat -s = определение расположения принтеров и принтера по умолчанию
	lpstat -t = получение полной информации о принтерах

	lpr [имя_файла_на_печать] = выводит указанный файл на печать. Для распечатки можно использовать только форматы: txt, PDF, PostScript.

	lpr -p [имя_принтера имя_файла_на_печать] = вывод печати на указанный принтер

	lpr -# [число_копий имя_файла_на_печать] = распечатка указанного числа копий

	lpq = получение списка заданий на печать

	lprm = отмена задания, переданного на принтер по умолчанию
	lprm [идентификатор_задания] = отмена задания переданного на произвольный принтер
	
	lprm - = отмена всех заданий на печать 


//////////////////////////////////////////////////////////////////////////////////
//////////////////////Владельцы//файлов//и//права//доступа////////////////////////
//////////////////////////////////////////////////////////////////////////////////


